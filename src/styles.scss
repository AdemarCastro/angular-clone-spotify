// styles.scss eu posso adicionar Estilos Globais em todo meu projeto

@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700&display=swap');
@import 'variaveis.scss'; // É importante para manter o padrão de projeto e o particionamento de componentes

html, body {
    margin: 0; // Margin e Paddin Zero serve para tirar a padronização da página Web
    padding: 0;
    background-color: $cor-fundo;
}

* {
    font-family: 'Montserrat', sans-serif;
    box-sizing: border-box; // Agora o tamanho dos elementos são calculados levando em consideração o preenchimento e a borda. Essa propriedade é útil porque permite controlar mais facilmente o layout de um elemento e evitar problemas de dimensionamento imprevisíveis. Por exemplo, se você definir a largura de uma caixa com width: 100%, e a caixa tiver uma borda e preenchimento, o tamanho total da caixa pode acabar excedendo a largura da tela, criando uma barra de rolagem horizontal. Com box-sizing: border-box, você pode garantir que a largura total da caixa permaneça dentro da largura da tela, incluindo as dimensões da borda e do preenchimento.
}

.flex { // Assim não irei precisar sempre declarar que uma div é um display flex
    display: flex;

    &-center { // Isso aqui é para padronizar os itens para serem centralizados em uma página
        justify-content: center;
        align-items: center;
    }
}

.titulo {
    color: $cor-primaria;
    display: block;
    font-weight: 700;

    &-bg { // Não coloca as propriedades acima dentro, mas com a propriedade extend .titulo é possível introduzir as propriedades de titulo dentro de bg
        @extend .titulo;
        font-size: 2.2rem;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    
    &-md {
        @extend .titulo;
        font-size: 1.4rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    
}

.mt {
    @for $i from 1 to 10 {
    &-#{ $i } {
        margin-top: #{ $i }vh;
    }
   } // Irei utilizar um for para interar utilizando o SAS para me permitir criar um MT de 1 até 10 com poucas linhas e de forma mais legivel. Muito legal! Fiz um FOR utilizando CSS.
}

.p-20 {
    padding: 20px;
}

.card {
    box-shadow: 0px 0px 15px $preto-transparente-03;
    background-color: $branco;
    border-radius: 10px;
}